from aiogram import Bot, types, Dispatcher, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardButton,InlineKeyboardMarkup
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
import asyncio
import io 
import json
from Books_db import add_user,add_book,kp_b,del_kor,add_order,gnbi,ab_c,goi


TOKEN=''
bot = Bot(TOKEN)
dp= Dispatcher(bot=bot, storage=MemoryStorage())

storage = MemoryStorage()
class New_book(StatesGroup):
    title=   State()
    author=  State()
    genre=   State()
    price=   State()
    rating=  State()
    f_photo= State()
    c_photo= State()
    
class new_ord(StatesGroup):
    city=    State()
    adress = State()


hells=''' 
<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —É—é—Ç–Ω—ã–π –∫–Ω–∏–∂–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω! üìñ‚ú® –ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –∑–¥–µ—Å—å.</b>

–£ –Ω–∞—Å —Ç—ã –Ω–∞–π–¥–µ—à—å –æ–≥—Ä–æ–º–Ω—ã–π –≤—ã–±–æ—Ä –∫–Ω–∏–≥ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å –∏ –≤–æ–∑—Ä–∞—Å—Ç. üìöüåà –ù–æ–≤–∏–Ω–∫–∏, –±–µ—Å—Ç—Å–µ–ª–ª–µ—Ä—ã, –∫–ª–∞—Å—Å–∏–∫–∞ - –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø—Ä–∏—è—Ç–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è.

–ù–µ –∑–Ω–∞–µ—à—å, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å? –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º –∏ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å —Å–∞–º—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∫–Ω–∏–≥–∏. üí¨üí°

–ñ–µ–ª–∞–µ–º –ø—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è! üìöüõíüéâ

'''

hells2='''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –º–∞–≥–∞–∑–∏–Ω–∞ –∫–Ω–∏–≥, –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É!'''


@dp.message_handler(commands=['start']) #–í–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞. –ü–æ–¥–∫–ª—é—á–∏–ª –µ–≥–æ –∫ –º–∞–≥–∞–∑–∏–Ω—É
async def start_cm(message: types.message):
    await add_user(message.from_user.id)
    if message.from_user.id in [1241056892, 883052245]:
        ikb=InlineKeyboardMarkup(row_witdh=1)
        ikb.insert(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—Éüìö',callback_data='add_book'))
        await bot.send_message(chat_id=message.from_user.id,
                            text=hells2,
                            parse_mode="HTML",
                            reply_markup=ikb
                            )
    else:
        kb=ReplyKeyboardMarkup(resize_keyboard=True)
        kb.add(KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–Ω–∏–≥–∏üìö')).insert(KeyboardButton('–ú–æ—è –ö–æ—Ä–∑–∏–Ω–∞üóë')).add(KeyboardButton('–ú–æ–∏ –ó–∞–∫–∞–∑—ãüì¶'))
        await bot.send_message(chat_id=message.from_user.id,
                            text=hells,
                            parse_mode="HTML",
                            reply_markup=kb
                            )
    await message.delete()

#----------------------------------------------------------------------------------------------------------------------------------------------------------------
#–í–´–ë–û–† –ß–¢–û –î–ï–õ–ê–¢–¨ –ü–û–õ–¨–ó
#----------------------------------------------------------------------------------------------------------------------------------------------------------------
@dp.message_handler(regexp='–ú–æ—è –ö–æ—Ä–∑–∏–Ω–∞üóë')
async def sh_bo(message: types.message):
    h=await kp_b(message.from_user.id)
    for t in h:
        media1 = [types.InputMediaPhoto(media=t['front_cover_photo']), types.InputMediaPhoto(media=t['back_cover_photo'])]
        msg1=await bot.send_media_group(chat_id=message.from_user.id, media=media1)
        ikb=InlineKeyboardMarkup(row_witdh=2)
        ikb.insert(InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—åüõí',callback_data='ord'+str(t['id']))).insert(InlineKeyboardButton(text='–£–±—Ä–∞—Ç—å —Å –∫–æ—Ä–∑–∏–Ω—ã‚ùå',callback_data='del'+str(t['id'])+'$'+str(msg1[0].message_id)+'$'+str(msg1[1].message_id)))
        await bot.send_message(chat_id=message.from_user.id,
                                text=f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ</b>: {t['title']}\n<b>–ê–≤—Ç–æ—Ä</b>:{t['author']}\n\n<b>–¶–µ–Ω–∞</b>: {t['price']}‚Ç∏ <b>–ñ–∞–Ω—Ä</b>: {t['genre']} <b>–†–µ–π—Ç–∏–Ω–≥</b>: {t['rating']}|5",
                                parse_mode='HTML',
                                reply_markup=ikb
            )
    await bot.send_message(chat_id=message.from_user.id,text=f'–≠—Ç–æ –≤—Å–µ –≤–∞—à–∏ –∫–Ω–∏–≥–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ!üìñ\n\n–í—Å–µ–≥–æ: <b>{len(h)}</b>\n\n–ß—Ç–æ –±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë, –º–æ–∂–µ—Ç–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –∫–Ω–∏–≥—É –ø–æ –≤–∫—É—Å—É –≤ <b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–Ω–∏–≥–∏üìö</b>',parse_mode='HTML')

@dp.message_handler(regexp='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–Ω–∏–≥–∏üìö')
async def sh_qa(message: types.message):
    ikb = InlineKeyboardMarkup(row_width=3)
    ikb.row(
        InlineKeyboardButton(text='–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞üõ∏', callback_data='shw–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞üõ∏$0'),
        InlineKeyboardButton(text='–î–µ—Ç–µ–∫—Ç–∏–≤üîç', callback_data='shw–î–µ—Ç–µ–∫—Ç–∏–≤üîç$0'),
        InlineKeyboardButton(text='–†–æ–º–∞–Ωüíñ', callback_data='shw–†–æ–º–∞–Ωüíñ$0')
    )
    ikb.row(
        InlineKeyboardButton(text='–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—èüåç', callback_data='shw–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—èüåç$0'),
        InlineKeyboardButton(text='–§—ç–Ω—Ç–µ–∑–∏üêâ', callback_data='shw–§—ç–Ω—Ç–µ–∑–∏üêâ$0'),
        InlineKeyboardButton(text='–¢—Ä–∏–ª–ª–µ—Äüî•', callback_data='shw–¢—Ä–∏–ª–ª–µ—Äüî•$0')
    )
    ikb.row(
        InlineKeyboardButton(text='–•–æ—Ä—Ä–æ—ÄüíÄ', callback_data='shw–•–æ—Ä—Ä–æ—ÄüíÄ$0'),
        InlineKeyboardButton(text='–ù–∞—É—á–Ω–æ–µüî¨', callback_data='shw–ù–∞—É—á–Ω–æ–µüî¨$0'),
        InlineKeyboardButton(text='–ö–ª–∞—Å—Å–∏–∫–∞üìñ', callback_data='shw–ö–ª–∞—Å—Å–∏–∫–∞üìñ$0')
    )
    await bot.send_message(text='–ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å –∫–Ω–∏–≥–∏ –≤—ã–±–µ—Ä–∏—Ç–µ <b>–ñ–∞–Ω—Äüìú</b>',chat_id=message.from_user.id,parse_mode='HTML',reply_markup=ikb)

@dp.message_handler(regexp='–ú–æ–∏ –ó–∞–∫–∞–∑—ãüì¶')
async def sh_or(message: types.message):
    h= await goi(message.from_user.id)
    x= 0
    for t in h:
        x+= t['price']
        await bot.send_message(chat_id=message.from_user.id,
                                text=f"<b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞</b>: {t['order_id']}\n<b>–ù–∞–∑–≤–∞–Ω–∏–µ</b>: {t['title']}\n\n<b>–¶–µ–Ω–∞</b>: {t['price']}‚Ç∏\n<b>–î–∞—Ç–∞</b>: {t['order_date'].strftime('%Y-%m-%d %H:%M:%S')} <b>–°—Ç–∞—Ç—É—Å</b>: {t['order_status']}",
                                parse_mode='HTML'
            )
    await bot.send_message(chat_id=message.from_user.id,
                            text=f'–¶–µ–Ω–∞ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤: <b>{x}‚Ç∏</b>\n\n–í –æ–±—â–µ–º –∫–Ω–∏–≥: <b>{len(h)}</b>üìñ',
                            parse_mode='HTML'
        )
#----------------------------------------------------------------------------------------------------------------------------------------------------------------
#–î–æ–ø–Ω—É—Ç—å –Ω–æ–≤—É—é –∫–Ω–∏–≥—É
#----------------------------------------------------------------------------------------------------------------------------------------------------------------

@dp.message_handler(state=New_book.title)        #–¢–ï–ú–ê
async def nazv(message: types.message, state: FSMContext):
    async with state.proxy() as data:
        data['title'] = message.text
    await bot.send_message(text='<b>–≠—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏</b>: 2 –∏–∑ 7üìç\n\n–ù–∞–ø–∏—à–∏—Ç–µ –§–ò–û –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏üßëüèª‚Äçüíª',chat_id=message.from_user.id,parse_mode='HTML')
    await New_book.next()

@dp.message_handler(state=New_book.author)       #–ê–í–¢–û–†
async def authorr(message: types.message, state: FSMContext):
    async with state.proxy() as data:
        data['author'] = message.text
    ikb = InlineKeyboardMarkup(row_width=3)
    ikb.row(
        InlineKeyboardButton(text='–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞üõ∏', callback_data='–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞üõ∏'),
        InlineKeyboardButton(text='–î–µ—Ç–µ–∫—Ç–∏–≤üîç', callback_data='–î–µ—Ç–µ–∫—Ç–∏–≤üîç'),
        InlineKeyboardButton(text='–†–æ–º–∞–Ωüíñ', callback_data='–†–æ–º–∞–Ωüíñ')
    )
    ikb.row(
        InlineKeyboardButton(text='–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—èüåç', callback_data='–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—èüåç'),
        InlineKeyboardButton(text='–§—ç–Ω—Ç–µ–∑–∏üêâ', callback_data='–§—ç–Ω—Ç–µ–∑–∏üêâ'),
        InlineKeyboardButton(text='–¢—Ä–∏–ª–ª–µ—Äüî•', callback_data='–¢—Ä–∏–ª–ª–µ—Äüî•')
    )
    ikb.row(
        InlineKeyboardButton(text='–•–æ—Ä—Ä–æ—ÄüíÄ', callback_data='–•–æ—Ä—Ä–æ—ÄüíÄ'),
        InlineKeyboardButton(text='–ù–∞—É—á–Ω–æ–µüî¨', callback_data='–ù–∞—É—á–Ω–æ–µüî¨'),
        InlineKeyboardButton(text='–ö–ª–∞—Å—Å–∏–∫–∞üìñ', callback_data='–ö–ª–∞—Å—Å–∏–∫–∞üìñ')
    )
    await bot.send_message(text='<b>–≠—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏</b>: 3 –∏–∑ 7üìç\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∫–Ω–∏–≥–∏',chat_id=message.from_user.id,parse_mode='HTML',reply_markup=ikb)
    await New_book.next()

@dp.callback_query_handler(state=New_book.genre) #–ñ–ê–ù–†
async def genree(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        data['genre'] = callback.data
    await bot.send_message(text='<b>–≠—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏</b>: 4 –∏–∑ 7üìç\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–π –∫–Ω–∏–≥–∏ –≤ —Ç–µ–Ω–≥–µüí∏',chat_id=callback.from_user.id,parse_mode='HTML')
    await New_book.next()

@dp.message_handler(state=New_book.price)        #–¶–ï–ù–ê
async def prs(message: types.message, state: FSMContext):
    try:
        float(message.text)
        async with state.proxy() as data:
            data['price'] = message.text
        await bot.send_message(text='<b>–≠—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏</b>: 5 –∏–∑ 7üìç\n\n–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–π –∫–Ω–∏–≥–∏ —Å 2 —Ü–∏—Ñ—Ä–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–πüìä',chat_id=message.from_user.id,parse_mode='HTML')
        await New_book.next()
    except:
        await bot.send_message(text='–ü–∏—à–∏—Ç–µ –ª–∏—à—å —Ü–∏—Ñ—Ä—ã –±–µ–∑ –∫–∞–∫–∏—Ö –ª–∏–±–æ –∑–Ω–∞–∫–æ–≤ –∏–ª–∏ –±—É–∫–≤üí¢',chat_id=message.from_user.id,parse_mode='HTML')

@dp.message_handler(state=New_book.rating)       #–†–ï–ô–¢–ò–ù–ì
async def rtng(message: types.message, state: FSMContext):
    try:
        if float(message.text)<=5:
            async with state.proxy() as data:
                data['rating'] = message.text
            await bot.send_message(text='<b>–≠—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏</b>: 6 –∏–∑ 7üìç\n\n–§–æ—Ç–æ —ç—Ç–æ–π –∫–Ω–∏–≥–∏ —Å –ø–µ—Ä–µ–¥–Ω–µ–π —Å—Ç–æ—Ä–æ–Ω—ã, –Ω–µ –≥—Ä—É–ø–ø–∏—Ä—É—è!üì∑',chat_id=message.from_user.id,parse_mode='HTML')
            await New_book.next()
        else:
            1/0
    except:
        await bot.send_message(text='–ü–∏—à–∏—Ç–µ –ª–∏—à—å —Ü–∏—Ñ—Ä—ã –±–µ–∑ –∫–∞–∫–∏—Ö –ª–∏–±–æ –∑–Ω–∞–∫–æ–≤ –∏–ª–∏ –±—É–∫–≤ –Ω–µ –±–æ–ª—å—à–µ 5üí¢',chat_id=message.from_user.id,parse_mode='HTML')

@dp.message_handler(content_types=['photo'], state=New_book.f_photo) #–° –ü–ï–†–ï–î–ò
async def save_otoud(message: types.message, state: FSMContext):
    if message.media_group_id:
        await bot.send_message(chat_id=message.from_user.id,
                                        text= f'–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏‚ùå',
                                        parse_mode="HTML"
                                        )
    else:
        async with state.proxy() as data:
            data['f_photo'] = message.photo[-1].file_id
        await bot.send_message(chat_id=message.from_user.id,
                                        text= f'<b>–≠—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏</b>: 7 –∏–∑ 7üìç\n\n–§–æ—Ç–æ —ç—Ç–æ–π –∫–Ω–∏–≥–∏ —Å –∑–∞–¥–Ω–µ–π —Å—Ç–æ—Ä–æ–Ω—ã, –Ω–µ –≥—Ä—É–ø–ø–∏—Ä—É—è!üì∑',
                                        parse_mode="HTML"
                                        )
        await New_book.next()

@dp.message_handler(content_types=['photo'], state=New_book.c_photo) #–°–ó–ê–î–ò - –§–ò–ù–ò–®
async def save_phod(message: types.message, state: FSMContext):
    if message.media_group_id:
        await bot.send_message(chat_id=message.from_user.id,
                                        text= f'–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏‚ùå',
                                        parse_mode="HTML"
                                        )
    else:
        ikb=InlineKeyboardMarkup(row_witdh=1)
        ikb.insert(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—Éüìö',callback_data='add_book'))
        async with state.proxy() as data:
            data['c_photo'] = message.photo[-1].file_id
        await bot.send_message(chat_id=message.from_user.id,
                                        text= f'<b>–í–∞—à–∞ –∫–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞‚úÖ</b>',
                                        parse_mode="HTML",
                                        reply_markup=ikb
                                        )
        await add_book(data)
        await state.finish()

#----------------------------------------------------------------------------------------------------------------------------------------------------------------
#–û–§–û–†–ú–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê
#----------------------------------------------------------------------------------------------------------------------------------------------------------------
@dp.callback_query_handler(state=new_ord.city) #–ì–û–†–û–î
async def cityy(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        data['adress']=callback.data
    await bot.send_message(text=f'–û—Ç–ª–∏—á–Ω–æ –≤–∞—à –≥–æ—Ä–æ–¥ <b>{callback.data}</b>üî•\n\n–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∏üì¶',chat_id=callback.from_user.id,parse_mode='HTML')
    await new_ord.next()

@dp.message_handler(state=new_ord.adress)      #–ê–î–†–ï–°–°
async def adr(message: types.message, state: FSMContext):
    async with state.proxy() as data:
        data['adress']=data['adress']+' - '+message.text
    kb=ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–Ω–∏–≥–∏üìö')).insert(KeyboardButton('–ú–æ—è –ö–æ—Ä–∑–∏–Ω–∞üóë')).add(KeyboardButton('–ú–æ–∏ –ó–∞–∫–∞–∑—ãüì¶'))   
    await bot.send_message(text=f'''–û—Ç–ª–∏—á–Ω–æ –º–µ—Å—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∏ <b>{data['adress']}</b>üî•\n\n–ó–∞–π–¥–∏—Ç–µ –≤ <b>–ú–æ–∏ –ó–∞–∫–∞–∑—ãüì¶</b> —á—Ç–æ –±—ã —Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞‚úÖ''', 
                            chat_id=message.from_user.id, 
                            parse_mode='HTML', 
                            reply_markup=kb)
    await add_order(data)
    t=data
    await bot.send_message(chat_id=1241056892,
                                text=f"<b>–ó–∞–∫–∞–∑—á–∏–∫</b>: @{message.from_user.username}\n<b>–ê–π–¥–∏ –∫–Ω–∏–≥–∏</b>: {t['book_id']}",
                                parse_mode='HTML'
            )
    await state.finish()
#----------------------------------------------------------------------------------------------------------------------------------------------------------------


@dp.callback_query_handler()
async def inser(callback: types.CallbackQuery, state: FSMContext):
    
    if callback.data[:3]=='del':    #–£–î–ê–õ–ò–¢–¨ –ö–ù–ò–ì–£ –ò–ó –ö–û–†–ó–ò–ù–´
        await del_kor(int(callback.data[3:callback.data.index('$')]),callback.from_user.id)
        msg1=callback.data[callback.data.index('$')+1:].split('$')
        await bot.delete_message(chat_id=callback.from_user.id,message_id=int(msg1[0]))
        await bot.delete_message(chat_id=callback.from_user.id,message_id=int(msg1[1]))
        await bot.delete_message(chat_id=callback.from_user.id,message_id=callback.message.message_id)
    
    if callback.data[:3]=='ord':    #–ù–ê–ó–ù–ê–ß–ò–¢–¨ –ó–ê–ö–ê–ó
        async with state.proxy() as data:
            data['user_id']=callback.from_user.id
            data['book_id']=int(callback.data[3:])
        ikb=InlineKeyboardMarkup(row_width=2)
        ikb.insert(InlineKeyboardButton(text='–ê–∫—Ç–∞—É',callback_data='–ê–∫—Ç–∞—É')).insert(InlineKeyboardButton(text='–ê–∫—Ç–æ–±–µ',callback_data='–ê–∫—Ç–æ–±–µ')).insert(InlineKeyboardButton(text='–ê–ª–º–∞—Ç—ã',callback_data='–ê–ª–º–∞—Ç—ã')).insert(InlineKeyboardButton(text='–ê—Å—Ç–∞–Ω–∞',callback_data='–ê—Å—Ç–∞–Ω–∞')).insert(InlineKeyboardButton(text='–ê—Ç—ã—Ä–∞—É',callback_data='–ê—Ç—ã—Ä–∞—É')).insert(InlineKeyboardButton(text='–ñ–∞–Ω–∞–æ–∑–µ–Ω',callback_data='–ñ–∞–Ω–∞–æ–∑–µ–Ω')).insert(InlineKeyboardButton(text='–ö–∞—Ä–∞–≥–∞–Ω–¥–∞',callback_data='–ö–∞—Ä–∞–≥–∞–Ω–¥–∞')).insert(InlineKeyboardButton(text='–ö–∞—Å–∫–µ–ª–µ–Ω',callback_data='–ö–∞—Å–∫–µ–ª–µ–Ω')).insert(InlineKeyboardButton(text='–ö–æ–∫—à–µ—Ç–∞—É',callback_data='–ö–æ–∫—à–µ—Ç–∞—É')).insert(InlineKeyboardButton(text='–ö–æ—Å—Ç–∞–Ω–∞–π',callback_data='–ö–æ—Å—Ç–∞–Ω–∞–π')).insert(InlineKeyboardButton(text='–ö—ã–∑—ã–ª–æ—Ä–¥–∞',callback_data='–ö—ã–∑—ã–ª–æ—Ä–¥–∞')).insert(InlineKeyboardButton(text='–ü–∞–≤–ª–æ–¥–∞—Ä',callback_data='–ü–∞–≤–ª–æ–¥–∞—Ä')).insert(InlineKeyboardButton(text='–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫',callback_data='–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫')).insert(InlineKeyboardButton(text='–°–µ–º–µ–π',callback_data='–°–µ–º–µ–π')).insert(InlineKeyboardButton(text='–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω',callback_data='–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω')).insert(InlineKeyboardButton(text='–¢–∞—Ä–∞–∑',callback_data='–¢–∞—Ä–∞–∑')).insert(InlineKeyboardButton(text='–¢–µ–º–∏—Ä—Ç–∞—É',callback_data='–¢–µ–º–∏—Ä—Ç–∞—É')).insert(InlineKeyboardButton(text='–¢—É—Ä–∫–µ—Å—Ç–∞–Ω',callback_data='–¢—É—Ä–∫–µ—Å—Ç–∞–Ω')).insert(InlineKeyboardButton(text='–£—Ä–∞–ª—å—Å–∫',callback_data='–£—Ä–∞–ª—å—Å–∫')).insert(InlineKeyboardButton(text='–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫',callback_data='–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫')).insert(InlineKeyboardButton(text='–®—ã–º–∫–µ–Ω—Ç',callback_data='–®—ã–º–∫–µ–Ω—Ç'))
        await bot.send_message(chat_id=callback.from_user.id,
                                text='–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä, –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏‚úÖ',
                                parse_mode="HTML",reply_markup=ReplyKeyboardRemove()
                                )
        await bot.send_message(chat_id=callback.from_user.id,
                                text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥üó∫\n–ï—Å–ª–∏ –∂–µ –µ–≥–æ –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–π‚úîÔ∏è',
                                parse_mode="HTML",reply_markup=ikb
                                )
        await new_ord.city.set()
    
    if callback.data=='add_book':   #–ù–ê–ß–ê–õ–û –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ö–ù–ò–ì–ò
        await bot.send_message(text='<b>–≠—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏</b>: 1 –∏–∑ 7üìç\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏üñä',chat_id=callback.from_user.id,parse_mode='HTML')
        await New_book.title.set()

    if callback.data[:3]=='shw':    #–ü–û–î–ë–û–† –ö–ù–ò–ì
        idd=int(callback.data[callback.data.index('$')+1:])
        t= await gnbi(idd,callback.data[3:callback.data.index('$')])
        if t!=None:
            media1 = [types.InputMediaPhoto(media=t['front_cover_photo']), types.InputMediaPhoto(media=t['back_cover_photo'])]
            msg1 = await bot.send_media_group(chat_id=callback.from_user.id, media=media1)
            ikb=InlineKeyboardMarkup(row_witdh=2)
            ikb.insert(InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—åüì¶',callback_data='ord'+str(t['id']))).insert(InlineKeyboardButton(text='–í –∫–æ—Ä–∑–∏–Ω—Éüõí',callback_data='adc'+str(t['id']))).insert(InlineKeyboardButton(text=f'''–ï—â—ë {callback.data[3:callback.data.index('$')]}''',callback_data=callback.data[:callback.data.index('$')+1]+str(t['id'])))
            await bot.send_message(chat_id=callback.from_user.id,
                                    text=f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ</b>: {t['title']}\n<b>–ê–≤—Ç–æ—Ä</b>:{t['author']}\n\n<b>–¶–µ–Ω–∞</b>: {t['price']}‚Ç∏ <b>–ñ–∞–Ω—Ä</b>: {t['genre']} <b>–†–µ–π—Ç–∏–Ω–≥</b>: {t['rating']}|5",
                                    parse_mode='HTML',
                                    reply_markup=ikb
                )
        else:
            await bot.send_message(chat_id=callback.from_user.id,
                            text=f'''–ü–æ–∫–∞ —á—Ç–æ –≤—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –∫–Ω–∏–≥–∏ –≤ –∂–∞–Ω—Ä–µ <b>{callback.data[3:callback.data.index('$')]}</b>\n\n–°–∫–æ—Ä–æ –±—É–¥—É—Ç –Ω–æ–≤—ã–µüî• –ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏ –¥—Ä—É–≥–∏–µ –∂–∞–Ω—Ä—ã –ø–æ –∫–Ω–æ–ø–∫–µ <b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–Ω–∏–≥–∏üìö</b>''',
                            parse_mode='HTML'
                )

    if callback.data[:3]=='adc':    #–î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–ù–ò–ì–ò –í –ö–†–ó
        await callback.answer(text=f'+1 –∫–Ω–∏–≥–∞ –≤ –∫–æ—Ä–∑–∏–Ω—Éüõí') 
        await ab_c(int(callback.data[3:]), callback.from_user.id)



if __name__=="__main__":
    executor.start_polling(dp,skip_updates=True)